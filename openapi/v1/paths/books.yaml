get:
  summary: Get all books
  description: Get all books from the list
  operationId: get-books
  tags:
    - Books
  parameters:
    - $ref: "../components/parameters/limit.yaml"
    - $ref: "../components/parameters/offset.yaml"
    - $ref: "../components/parameters/genre.yaml"
    - name: status
      in: query
      required: false
      description: Filter books by reading status.
      schema:
        type: string
        enum: [read, to-be-read]
        example: read
    - name: author
      in: query
      required: false
      description: Filter books by author name.
      schema:
        type: string
        example: "Brandon Sanderson"
    - name: sort
      in: query
      required: false
      description: Sort books by a specific field.
      schema:
        type: string
        enum: [title, author, genre, status]
        example: title
  responses:
    200:
      $ref: "../components/responses/books/200.yaml"
    400:
      $ref: "../components/responses/400.yaml"
    401:
      $ref: "../components/responses/401.yaml"
    403:
      $ref: "../components/responses/403.yaml"
    404:
      $ref: "../components/responses/404.yaml"
post:
  summary: Add a book
  description: Add a specific book
  operationId: add-book
  tags:
    - Books
  requestBody:
    description: Create a new book
    required: true
    content:
      application/json:
        schema:
          $ref: "../components/schemas/NewBook.yaml"
  responses:
    201:
      $ref: "../components/responses/books/201.yaml"
    400:
      $ref: "../components/responses/400.yaml"
    401:
      $ref: "../components/responses/401.yaml"
    403:
      $ref: "../components/responses/403.yaml"
    404:
      $ref: "../components/responses/404.yaml"
