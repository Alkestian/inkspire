// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Inkspire
 *
 * This app allows for making lists of various types across different media and will eventually have fuzzy searching and rating functionality added to it. 
 *
 * API version: 0.0.1
 */

package openapi


import (
	"time"
	"errors"
)



type Book struct {

	Id string `json:"id"`

	Title string `json:"title"`

	AuthorId string `json:"authorId"`

	SeriesId string `json:"seriesId,omitempty"`

	Genres []string `json:"genres,omitempty"`

	Pages int32 `json:"pages,omitempty"`

	Status string `json:"status,omitempty"`

	UpdatedAt time.Time `json:"updatedAt,omitempty"`
}

// AssertBookRequired checks if the required fields are not zero-ed
func AssertBookRequired(obj Book) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"title": obj.Title,
		"authorId": obj.AuthorId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertBookConstraints checks if the values respects the defined constraints
func AssertBookConstraints(obj Book) error {
	if obj.Pages < 1 {
		return &ParsingError{Param: "Pages", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
