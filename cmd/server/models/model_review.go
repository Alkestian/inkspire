// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Inkspire
 *
 * This app allows for making lists of various types across different media and will eventually have fuzzy searching and rating functionality added to it. 
 *
 * API version: 0.0.1
 */

package openapi


import (
	"time"
	"errors"
)



type Review struct {

	Id string `json:"id"`

	BookId string `json:"bookId"`

	Rating int32 `json:"rating,omitempty"`

	ReviewText string `json:"reviewText,omitempty"`

	CreatedAt time.Time `json:"createdAt"`
}

// AssertReviewRequired checks if the required fields are not zero-ed
func AssertReviewRequired(obj Review) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"bookId": obj.BookId,
		"createdAt": obj.CreatedAt,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertReviewConstraints checks if the values respects the defined constraints
func AssertReviewConstraints(obj Review) error {
	if obj.Rating < 1 {
		return &ParsingError{Param: "Rating", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Rating > 5 {
		return &ParsingError{Param: "Rating", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
